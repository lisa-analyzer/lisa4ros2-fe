digraph rosgraph {graph [pad="1", nodesep="2", rankdir="BT", ranksep="2"];"/encoder_publisher"[style=filled,fillcolor="limegreen"];"/camera_publisher_sim"[style=filled,fillcolor="limegreen"];"/fake_camera_publisher"[style=filled,fillcolor="limegreen"];"/chessboard_classifier"[style=filled,fillcolor="limegreen"];"/psuedo_state_controller"[style=filled,fillcolor="limegreen"];"/minimal_publisher"[style=filled,fillcolor="limegreen"];"/test_chessboard_locator"[style=filled,fillcolor="limegreen"];"/chess_client_async"[style=filled,fillcolor="limegreen"];"/chessboard_tracker"[style=filled,fillcolor="limegreen"];"/chess_engine"[style=filled,fillcolor="limegreen"];"/chessboard_dope_decoder"[style=filled,fillcolor="limegreen"];"/dataset_gatherer"[style=filled,fillcolor="limegreen"];"/minimal_service"[style=filled,fillcolor="limegreen"];"/chessboard_detector_fake"[style=filled,fillcolor="limegreen"];"/game_controller"[style=filled,fillcolor="limegreen"];"rt/chessboard/turn"[shape=box,style=filled,fillcolor="gold"];"rt/image"[shape=box,style=filled,fillcolor="gold"];"rt/chessboard/pseudo_fen"[shape=box,style=filled,fillcolor="gold"];"rt/viz/cluster"[shape=box,style=filled,fillcolor="gold"];"rt/pose"[shape=box,style=filled,fillcolor="gold"];"rt/chessboard/fen"[shape=box,style=filled,fillcolor="gold"];"rt/viz/top_cnn"[shape=box,style=filled,fillcolor="gold"];"rt/chessboard/fen_binary"[shape=box,style=filled,fillcolor="gold"];"rt/chessboard/joint0"[shape=box,style=filled,fillcolor="gold"];"rt/chessboard/AI_bestmove"[shape=box,style=filled,fillcolor="gold"];"rt/chessboard/illegal_move"[shape=box,style=filled,fillcolor="gold"];"rt/viz/side_cnn"[shape=box,style=filled,fillcolor="gold"];"rt/dope1/input"[shape=box,style=filled,fillcolor="gold"];"rt/chessboard/encoder"[shape=box,style=filled,fillcolor="gold"];"rt/camera0/image"[shape=box,style=filled,fillcolor="gold"];"rt/info"[shape=box,style=filled,fillcolor="gold"];"rt/chessboard/fen_color"[shape=box,style=filled,fillcolor="gold"];"rt/camera1/image"[shape=box,style=filled,fillcolor="gold"];"rt/chessboard/AI_ready"[shape=box,style=filled,fillcolor="gold"];"rt/dope0/output"[shape=box,style=filled,fillcolor="gold"];"rt/dope1/output"[shape=box,style=filled,fillcolor="gold"];"rt/tensor_sub"[shape=box,style=filled,fillcolor="gold"];"rt/dope0/input"[shape=box,style=filled,fillcolor="gold"];"rt/chessboard/side/ImgPose"[shape=box,style=filled,fillcolor="gold"];"rt/chessboard/top/ImgPose"[shape=box,style=filled,fillcolor="gold"];subgraph cluster_0 { style=filled;fillcolor="lightskyblue";penwidth=2;label="/find_best_move";"rr/find_best_moveReply"[shape=box,style=filled,fillcolor="gold"];"rq/find_best_moveRequest"[shape=box,style=filled,fillcolor="gold"];"rq/find_best_moveRequest"[shape=box,style=filled,fillcolor="gold"];"rr/find_best_moveReply"[shape=box,style=filled,fillcolor="gold"];"rq/find_best_moveRequest"[shape=box,style=filled,fillcolor="gold"];"rr/find_best_moveReply"[shape=box,style=filled,fillcolor="gold"];}subgraph cluster_1 { style=filled;fillcolor="lightskyblue";penwidth=2;label="/add_three_ints";"rq/add_three_intsRequest"[shape=box,style=filled,fillcolor="gold"];"rr/add_three_intsReply"[shape=box,style=filled,fillcolor="gold"];}subgraph cluster_2 { style=filled;fillcolor="lightskyblue";penwidth=2;label="/command_pose_lock";"rq/command_pose_lockRequest"[shape=box,style=filled,fillcolor="gold"];"rr/command_pose_lockReply"[shape=box,style=filled,fillcolor="gold"];}subgraph cluster_3 { style=filled;fillcolor="lightskyblue";penwidth=2;label="/command_cluster_lock";"rr/command_cluster_lockReply"[shape=box,style=filled,fillcolor="gold"];"rq/command_cluster_lockRequest"[shape=box,style=filled,fillcolor="gold"];"rr/command_cluster_lockReply"[shape=box,style=filled,fillcolor="gold"];"rq/command_cluster_lockRequest"[shape=box,style=filled,fillcolor="gold"];}subgraph cluster_4 { style=filled;fillcolor="lightskyblue";penwidth=2;label="/chessboard_detection";"rr/chessboard_detectionReply"[shape=box,style=filled,fillcolor="gold"];"rq/chessboard_detectionRequest"[shape=box,style=filled,fillcolor="gold"];}subgraph cluster_5 { style=filled;fillcolor="lightskyblue";penwidth=2;label="/execute_bestmove";"rq/execute_bestmoveRequest"[shape=box,style=filled,fillcolor="gold"];"rr/execute_bestmoveReply"[shape=box,style=filled,fillcolor="gold"];"rr/execute_bestmoveReply"[shape=box,style=filled,fillcolor="gold"];"rq/execute_bestmoveRequest"[shape=box,style=filled,fillcolor="gold"];}subgraph cluster_6 { style=filled;fillcolor="lightskyblue";penwidth=2;label="/pseudo_board_setup";"rq/pseudo_board_setupRequest"[shape=box,style=filled,fillcolor="gold"];"rr/pseudo_board_setupReply"[shape=box,style=filled,fillcolor="gold"];"rq/pseudo_board_setupRequest"[shape=box,style=filled,fillcolor="gold"];"rr/pseudo_board_setupReply"[shape=box,style=filled,fillcolor="gold"];}subgraph cluster_7 { style=filled;fillcolor="lightskyblue";penwidth=2;label="/chessboard_locator";"rr/chessboard_locatorReply"[shape=box,style=filled,fillcolor="gold"];"rq/chessboard_locatorRequest"[shape=box,style=filled,fillcolor="gold"];}"/encoder_publisher" -> "rt/chessboard/encoder""/camera_publisher_sim" -> "rt/chessboard/side/ImgPose""/camera_publisher_sim" -> "rt/chessboard/top/ImgPose""/fake_camera_publisher" -> "rt/image""/fake_camera_publisher" -> "rt/info""/chessboard_classifier" -> "rt/viz/top_cnn""/chessboard_classifier" -> "rt/chessboard/fen""/chessboard_classifier" -> "rt/chessboard/fen_binary""/chessboard_classifier" -> "rt/chessboard/fen_color""/chessboard_classifier" -> "rt/viz/side_cnn""/chessboard_classifier" -> "rt/viz/cluster""rt/chessboard/top/ImgPose" -> "/chessboard_classifier""rt/chessboard/side/ImgPose" -> "/chessboard_classifier""rq/command_cluster_lockRequest" -> "/chessboard_classifier""/chessboard_classifier" -> "rr/command_cluster_lockReply""/psuedo_state_controller" -> "rt/chessboard/turn""/psuedo_state_controller" -> "rt/chessboard/illegal_move""/psuedo_state_controller" -> "rt/chessboard/AI_ready""/psuedo_state_controller" -> "rt/chessboard/AI_bestmove""/psuedo_state_controller" -> "rt/chessboard/pseudo_fen""rt/chessboard/fen_color" -> "/psuedo_state_controller""rt/chessboard/fen_binary" -> "/psuedo_state_controller""/psuedo_state_controller" -> "rr/execute_bestmoveReply""rq/execute_bestmoveRequest" -> "/psuedo_state_controller""rq/pseudo_board_setupRequest" -> "/psuedo_state_controller""/psuedo_state_controller" -> "rr/pseudo_board_setupReply""/minimal_publisher" -> "rt/chessboard/AI_bestmove""/minimal_publisher" -> "rt/chessboard/pseudo_fen""/minimal_publisher" -> "rt/chessboard/AI_ready""rr/chessboard_locatorReply" -> "/test_chessboard_locator""/test_chessboard_locator" -> "rq/chessboard_locatorRequest""rr/find_best_moveReply" -> "/chess_client_async""/chess_client_async" -> "rq/find_best_moveRequest""/chessboard_tracker" -> "rt/chessboard/top/ImgPose""/chessboard_tracker" -> "rt/chessboard/side/ImgPose""/chessboard_tracker" -> "rt/dope0/input""/chessboard_tracker" -> "rt/dope1/input""rt/camera1/image" -> "/chessboard_tracker""rt/dope0/output" -> "/chessboard_tracker""rt/camera0/image" -> "/chessboard_tracker""rt/chessboard/encoder" -> "/chessboard_tracker""rt/dope1/output" -> "/chessboard_tracker""/chess_engine" -> "rr/find_best_moveReply""rq/find_best_moveRequest" -> "/chess_engine""/chessboard_dope_decoder" -> "rt/pose""rt/tensor_sub" -> "/chessboard_dope_decoder""rt/camera0/image" -> "/dataset_gatherer""rt/chessboard/encoder" -> "/dataset_gatherer""rt/camera1/image" -> "/dataset_gatherer""/minimal_service" -> "rr/add_three_intsReply""rq/add_three_intsRequest" -> "/minimal_service""/chessboard_detector_fake" -> "rr/chessboard_detectionReply""rq/chessboard_detectionRequest" -> "/chessboard_detector_fake""/game_controller" -> "rt/chessboard/joint0""/game_controller" -> "rt/chessboard/encoder""rt/chessboard/AI_ready" -> "/game_controller""rt/camera0/image" -> "/game_controller""rt/chessboard/AI_bestmove" -> "/game_controller""rt/chessboard/pseudo_fen" -> "/game_controller""rt/camera1/image" -> "/game_controller""/game_controller" -> "rq/command_cluster_lockRequest""rr/command_cluster_lockReply" -> "/game_controller""rr/pseudo_board_setupReply" -> "/game_controller""/game_controller" -> "rq/pseudo_board_setupRequest""rr/execute_bestmoveReply" -> "/game_controller""/game_controller" -> "rq/execute_bestmoveRequest""rr/command_pose_lockReply" -> "/game_controller""/game_controller" -> "rq/command_pose_lockRequest""/game_controller" -> "rq/find_best_moveRequest""rr/find_best_moveReply" -> "/game_controller"}